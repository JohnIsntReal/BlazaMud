@page "/fileupload"
@rendermode InteractiveServer

<MudText Typo="Typo.h3" GutterBottom="true">I eat files</MudText>

<MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
    <ActivatorContent>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.CloudUpload">
            Upload Files
        </MudButton>
    </ActivatorContent>
</MudFileUpload>
<div>File name: @FileName</div>

@code
{
    IList<IBrowserFile> _files = new List<IBrowserFile>();

    public string FileName { get; set; } = "";
    public long FileSize { get; set; }
    public string FileType { get; set; } = "";
    public string ErrorMessage { get; set; } = "";

    public DateTimeOffset LastModified { get; set; }
    private List<ReaderEvent> listReader = new List<ReaderEvent>();

    const int MAX_FILESIZE = 5000 * 1024; // 2 MB
    private void UploadFiles(IBrowserFile file)
    {
        _files.Add(file);
        
        FileName = file.Name;
        try
            {
                var fileStream = file.OpenReadStream(MAX_FILESIZE);

                var randomFile = Path.GetTempFileName();
                var extension = Path.GetExtension(file.Name);
                var targetFilePath = Path.ChangeExtension(randomFile, extension);

                var destinationStream = new FileStream(targetFilePath, FileMode.Create);
                fileStream.CopyToAsync(destinationStream);
                destinationStream.Close();
            }
            catch (Exception exception)
            {
                ErrorMessage = exception.Message;
            }
    }
    
    class ReaderEvent
    {
        private string EVENT_TIME;
        private string LOCATION;
        private string READERDESCRIPTION;
        public string IDHASH;
        public string DEVID;
        public string MACHINE;

        public ReaderEvent()
        {
            EVENT_TIME = "";
            LOCATION = "";
            READERDESCRIPTION = "";
            IDHASH = "";
            DEVID = "";
            MACHINE = "";
        }
        public ReaderEvent(string time, string location, string description, string id, string devId, string machine)
        {
            EVENT_TIME = time;
            LOCATION = location;
            READERDESCRIPTION = description;
            IDHASH = id;
            DEVID = devId;
            MACHINE = machine;
        }
    }
}
